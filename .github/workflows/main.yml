name: JDK Compiler
run-name: build jdk8 codeql db
on: [push]
  # schedule:
  #   - cron: '0 0 1 * *'

env:
  ACTIONS_STEP_DEBUG: true

jobs:

  checkout-jdk8-src:
    runs-on: ubuntu-22.04
    permissions:
      security-events: write
    steps:
      - name: Install deps
        run: |
          sudo apt-get update && 
          sudo apt-get install -y wget git gcc-9 g++-9 make file unzip zip libx11-dev libxext-dev libxrender-dev libxtst-dev libxt-dev libcups2-dev libfreetype6-dev libasound2-dev libfontconfig1-dev &&
          # gcc-9 --version
          # sudo update-alternatives --config gcc
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100 --slave /usr/bin/g++ g++ /usr/bin/g++-9
      - name: Prepare bootJDK
        run: |
          wget https://repo.huaweicloud.com/java/jdk/7u80-b15/jdk-7u80-linux-x64.tar.gz &&
          tar zxvf jdk-7u80-linux-x64.tar.gz
          # export JAVA_HOME=$(pwd)/jdk1.7.0_80 && 
          # echo $JAVA_HOME
      - name: Prepare CodeQL CLI
        run: |
          wget https://github.com/github/codeql-cli-binaries/releases/download/v2.15.3/codeql-linux64.zip && 
          unzip codeql-linux64.zip
      - name: Prepare JDK8 src
        run: |
          git clone https://github.com/openjdk/jdk8u.git jdk8u-jdk8u382-ga && 
          cd jdk8u-jdk8u382-ga && 
          git checkout jdk8u382-ga &&
          pwd &&
          ls -lh
      - name: Configure
        run: |
          pwd &&
          cd jdk8u-jdk8u382-ga &&
          # make dist-clean &&
          # echo ${JAVA_HOME} &&
          echo $(dirname $(pwd))/jdk1.7.0_80 &&
          bash configure --with-boot-jdk=$(dirname $(pwd))/jdk1.7.0_80 &&
          make images
      - name: Create codeql db
        run: ../codeql/codeql database create database/jdk8u382-codeql-db --language=java --command='make images'
      - name: Upload db
        uses: actions/upload-artifact@v3
        with:
          name: jdk8u382-codeql-db
          path: database/jdk8u382-codeql-db
